#include <Windows.h>
#include <stdio.h>
#include "resource.h"
#include <stdlib.h>
#include <string.h>


/*-------------------------------------------------------------*/
/* 定义子程序与全局变量、常量                                  */
/*-------------------------------------------------------------*/
HINSTANCE hInst;
#define MAXINPUTLEN 30

unsigned int crc_table[256 * 2] = {
0x00000000,0x00000000,0x77073096,0xf26b8303,0xee0e612c,0xe13b70f7,0x990951ba,0x1350f3f4,0x076dc419,0xc79a971f,0x706af48f,0x35f1141c,0xe963a535,0x26a1e7e8,0x9e6495a3,0xd4ca64eb,
0x0edb8832,0x8ad958cf,0x79dcb8a4,0x78b2dbcc,0xe0d5e91e,0x6be22838,0x97d2d988,0x9989ab3b,0x09b64c2b,0x4d43cfd0,0x7eb17cbd,0xbf284cd3,0xe7b82d07,0xac78bf27,0x90bf1d91,0x5e133c24,
0x1db71064,0x105ec76f,0x6ab020f2,0xe235446c,0xf3b97148,0xf165b798,0x84be41de,0x030e349b,0x1adad47d,0xd7c45070,0x6ddde4eb,0x25afd373,0xf4d4b551,0x36ff2087,0x83d385c7,0xc494a384,
0x136c9856,0x9a879fa0,0x646ba8c0,0x68ec1ca3,0xfd62f97a,0x7bbcef57,0x8a65c9ec,0x89d76c54,0x14015c4f,0x5d1d08bf,0x63066cd9,0xaf768bbc,0xfa0f3d63,0xbc267848,0x8d080df5,0x4e4dfb4b,
0x3b6e20c8,0x20bd8ede,0x4c69105e,0xd2d60ddd,0xd56041e4,0xc186fe29,0xa2677172,0x33ed7d2a,0x3c03e4d1,0xe72719c1,0x4b04d447,0x154c9ac2,0xd20d85fd,0x061c6936,0xa50ab56b,0xf477ea35,
0x35b5a8fa,0xaa64d611,0x42b2986c,0x580f5512,0xdbbbc9d6,0x4b5fa6e6,0xacbcf940,0xb93425e5,0x32d86ce3,0x6dfe410e,0x45df5c75,0x9f95c20d,0xdcd60dcf,0x8cc531f9,0xabd13d59,0x7eaeb2fa,
0x26d930ac,0x30e349b1,0x51de003a,0xc288cab2,0xc8d75180,0xd1d83946,0xbfd06116,0x23b3ba45,0x21b4f4b5,0xf779deae,0x56b3c423,0x05125dad,0xcfba9599,0x1642ae59,0xb8bda50f,0xe4292d5a,
0x2802b89e,0xba3a117e,0x5f058808,0x4851927d,0xc60cd9b2,0x5b016189,0xb10be924,0xa96ae28a,0x2f6f7c87,0x7da08661,0x58684c11,0x8fcb0562,0xc1611dab,0x9c9bf696,0xb6662d3d,0x6ef07595,
0x76dc4190,0x417b1dbc,0x01db7106,0xb3109ebf,0x98d220bc,0xa0406d4b,0xefd5102a,0x522bee48,0x71b18589,0x86e18aa3,0x06b6b51f,0x748a09a0,0x9fbfe4a5,0x67dafa54,0xe8b8d433,0x95b17957,
0x7807c9a2,0xcba24573,0x0f00f934,0x39c9c670,0x9609a88e,0x2a993584,0xe10e9818,0xd8f2b687,0x7f6a0dbb,0x0c38d26c,0x086d3d2d,0xfe53516f,0x91646c97,0xed03a29b,0xe6635c01,0x1f682198,
0x6b6b51f4,0x5125dad3,0x1c6c6162,0xa34e59d0,0x856530d8,0xb01eaa24,0xf262004e,0x42752927,0x6c0695ed,0x96bf4dcc,0x1b01a57b,0x64d4cecf,0x8208f4c1,0x77843d3b,0xf50fc457,0x85efbe38,
0x65b0d9c6,0xdbfc821c,0x12b7e950,0x2997011f,0x8bbeb8ea,0x3ac7f2eb,0xfcb9887c,0xc8ac71e8,0x62dd1ddf,0x1c661503,0x15da2d49,0xee0d9600,0x8cd37cf3,0xfd5d65f4,0xfbd44c65,0x0f36e6f7,
0x4db26158,0x61c69362,0x3ab551ce,0x93ad1061,0xa3bc0074,0x80fde395,0xd4bb30e2,0x72966096,0x4adfa541,0xa65c047d,0x3dd895d7,0x5437877e,0xa4d1c46d,0x4767748a,0xd3d6f4fb,0xb50cf789,
0x4369e96a,0xeb1fcbad,0x346ed9fc,0x197448ae,0xad678846,0x0a24bb5a,0xda60b8d0,0xf84f3859,0x44042d73,0x2c855cb2,0x33031de5,0xdeeedfb1,0xaa0a4c5f,0xcdbe2c45,0xdd0d7cc9,0x3fd5af46,
0x5005713c,0x7198540d,0x270241aa,0x83f3d70e,0xbe0b1010,0x90a324fa,0xc90c2086,0x62c8a7f9,0x5768b525,0xb602c312,0x206f85b3,0x44694011,0xb966d409,0x5739b3e5,0xce61e49f,0xa55230e6,
0x5edef90e,0xfb410cc2,0x29d9c998,0x092a8fc1,0xb0d09822,0x1a7a7c35,0xc7d7a8b4,0xe811ff36,0x59b33d17,0x3cdb9bdd,0x2eb40d81,0xceb018de,0xb7bd5c3b,0xdde0eb2a,0xc0ba6cad,0x2f8b6829,
0xedb88320,0x82f63b78,0x9abfb3b6,0x709db87b,0x03b6e20c,0x63cd4b8f,0x74b1d29a,0x91a6c88c,0xead54739,0x456cac67,0x9dd277af,0xb7072f64,0x04db2615,0xa457dc90,0x73dc1683,0x563c5f93,
0xe3630b12,0x082f63b7,0x94643b84,0xfa44e0b4,0x0d6d6a3e,0xe9141340,0x7a6a5aa8,0x1b7f9043,0xe40ecf0b,0xcfb5f4a8,0x9309ff9d,0x3dde77ab,0x0a00ae27,0x2e8e845f,0x7d079eb1,0xdce5075c,
0xf00f9344,0x92a8fc17,0x8708a3d2,0x60c37f14,0x1e01f268,0x73938ce0,0x6906c2fe,0x81f80fe3,0xf762575d,0x55326b08,0x806567cb,0xa759e80b,0x196c3671,0xb4091bff,0x6e6b06e7,0x466298fc,
0xfed41b76,0x1871a4d8,0x89d32be0,0xea1a27db,0x10da7a5a,0xf94ad42f,0x67dd4acc,0x0b21572c,0xf9b9df6f,0xdfeb33c7,0x8ebeeff9,0x2d80b0c4,0x17b7be43,0x3ed04330,0x60b08ed5,0xccbbc033,
0xd6d6a3e8,0xa24bb5a6,0xa1d1937e,0x502036a5,0x38d8c2c4,0x4370c551,0x4fdff252,0xb11b4652,0xd1bb67f1,0x65d122b9,0xa6bc5767,0x97baa1ba,0x3fb506dd,0x84ea524e,0x48b2364b,0x7681d14d,
0xd80d2bda,0x2892ed69,0xaf0a1b4c,0xdaf96e6a,0x36034af6,0xc9a99d9e,0x41047a60,0x3bc21e9d,0xdf60efc3,0xef087a76,0xa867df55,0x1d63f975,0x316e8eef,0x0e330a81,0x4669be79,0xfc588982,
0xcb61b38c,0xb21572c9,0xbc66831a,0x407ef1ca,0x256fd2a0,0x532e023e,0x5268e236,0xa145813d,0xcc0c7795,0x758fe5d6,0xbb0b4703,0x87e466d5,0x220216b9,0x94b49521,0x5505262f,0x66df1622,
0xc5ba3bbe,0x38cc2a06,0xb2bd0b28,0xcaa7a905,0x2bb45a92,0xd9f75af1,0x5cb36a04,0x2b9cd9f2,0xc2d7ffa7,0xff56bd19,0xb5d0cf31,0x0d3d3e1a,0x2cd99e8b,0x1e6dcdee,0x5bdeae1d,0xec064eed,
0x9b64c2b0,0xc38d26c4,0xec63f226,0x31e6a5c7,0x756aa39c,0x22b65633,0x026d930a,0xd0ddd530,0x9c0906a9,0x0417b1db,0xeb0e363f,0xf67c32d8,0x72076785,0xe52cc12c,0x05005713,0x1747422f,
0x95bf4a82,0x49547e0b,0xe2b87a14,0xbb3ffd08,0x7bb12bae,0xa86f0efc,0x0cb61b38,0x5a048dff,0x92d28e9b,0x8ecee914,0xe5d5be0d,0x7ca56a17,0x7cdcefb7,0x6ff599e3,0x0bdbdf21,0x9d9e1ae0,
0x86d3d2d4,0xd3d3e1ab,0xf1d4e242,0x21b862a8,0x68ddb3f8,0x32e8915c,0x1fda836e,0xc083125f,0x81be16cd,0x144976b4,0xf6b9265b,0xe622f5b7,0x6fb077e1,0xf5720643,0x18b74777,0x07198540,
0x88085ae6,0x590ab964,0xff0f6a70,0xab613a67,0x66063bca,0xb831c993,0x11010b5c,0x4a5a4a90,0x8f659eff,0x9e902e7b,0xf862ae69,0x6cfbad78,0x616bffd3,0x7fab5e8c,0x166ccf45,0x8dc0dd8f,
0xa00ae278,0xe330a81a,0xd70dd2ee,0x115b2b19,0x4e048354,0x020bd8ed,0x3903b3c2,0xf0605bee,0xa7672661,0x24aa3f05,0xd06016f7,0xd6c1bc06,0x4969474d,0xc5914ff2,0x3e6e77db,0x37faccf1,
0xaed16a4a,0x69e9f0d5,0xd9d65adc,0x9b8273d6,0x40df0b66,0x88d28022,0x37d83bf0,0x7ab90321,0xa9bcae53,0xae7367ca,0xdebb9ec5,0x5c18e4c9,0x47b2cf7f,0x4f48173d,0x30b5ffe9,0xbd23943e,
0xbdbdf21c,0xf36e6f75,0xcabac28a,0x0105ec76,0x53b39330,0x12551f82,0x24b4a3a6,0xe03e9c81,0xbad03605,0x34f4f86a,0xcdd70693,0xc69f7b69,0x54de5729,0xd5cf889d,0x23d967bf,0x27a40b9e,
0xb3667a2e,0x79b737ba,0xc4614ab8,0x8bdcb4b9,0x5d681b02,0x988c474d,0x2a6f2b94,0x6ae7c44e,0xb40bbe37,0xbe2da0a5,0xc30c8ea1,0x4c4623a6,0x5a05df1b,0x5f16d052,0x2d02ef8d,0xad7d5351};
long long int  targetCrc = 0xe89ba203ba56c4f9;




/*-------------------------------------------------------------*/
/*  函数声明                                                   */
/*-------------------------------------------------------------*/
LRESULT CALLBACK MainDlg(HWND,UINT,WPARAM,LPARAM);
int encode_string(char* str, unsigned int length, char* stat);
BOOL CheckFlag(LPTSTR cFlag);
unsigned long long int Div(unsigned char *Data, int len);

/*-------------------------------------------------------------*/
/* WinMain － 基于WIN32的程序的入口                            */
/*-------------------------------------------------------------*/
int WINAPI WinMain  (HINSTANCE hInstance,HINSTANCE hPrevInstance,
					PSTR szCmdLine,int iCmdShow)

{
	hInst = hInstance;
	DialogBoxParam(hInstance,MAKEINTRESOURCE(IDD_DIALOG1),NULL,(DLGPROC)MainDlg,NULL);
	int a = GetLastError();
	return 0;
}

/*-------------------------------------------------------------*/
/*  MainDlg － 主对话窗口                                      */
/*-------------------------------------------------------------*/
LRESULT CALLBACK MainDlg(HWND hDlg,UINT message,WPARAM wParam,LPARAM lParam)
{
	switch (message)
	{
	case WM_INITDIALOG:
		int DlgHeight,DlgWidth,x,y;
		RECT DlgRect;
		RECT DesktopRect;
		HWND hWindow;
		
		SendDlgItemMessage(hDlg,IDC_TXT,EM_LIMITTEXT,MAXINPUTLEN,0);

		GetWindowRect(hDlg,&DlgRect);
		hWindow = GetDesktopWindow();
		GetWindowRect(hWindow,&DesktopRect);

		DlgHeight = DlgRect.bottom - DlgRect.top;
		DlgWidth = DlgRect.right - DlgRect.left;
		x = (DesktopRect.right + DesktopRect.left - DlgWidth)/2;
		y = (DesktopRect.bottom + DesktopRect.top - DlgHeight)/2;

		MoveWindow(hDlg,x,y,DlgWidth,DlgHeight,FALSE);

		return TRUE;
		break;
	case WM_CLOSE:
		EndDialog(hDlg,0);
		return TRUE;
		break;

	case WM_COMMAND:
		switch (LOWORD(wParam))
		{
		case IDOK:
			TCHAR cFlag[40];
			GetDlgItemText(hDlg,IDC_TXT,cFlag,sizeof(cFlag)/sizeof(TCHAR)+1);
			if(CheckFlag(cFlag))
			{
				TCHAR flag[40];
				wsprintf(flag,"hctf{%s}",cFlag);//C1c320r64?
				MessageBox(hDlg,(LPCSTR)flag,(LPCSTR)"Right",MB_OK);
			}
			else
			{
				MessageBox(hDlg,(LPCSTR)"It's not flag",(LPCSTR)"Wrong",MB_OK);
			}
			return TRUE;
			break;
		case IDCANCEL:
			SendMessage(hDlg,WM_CLOSE,0,0);
			return TRUE;
			break;
		}
	}
	return FALSE;
}

TCHAR Text[257] = "So this is a not diffcult problem if you have a very good compute.But if you do not have a good computer.It seems that This problem will take a lot of time.But not thing is impossible.So just try it!!Some times,The thing we seem is not reall [][]()()<><>..";
TCHAR flag[] = "d'wuh`ufj&"; 
//It is a crc program!
BOOL CheckFlag(LPTSTR cFlag)
{
	int len = strlen(cFlag);
	unsigned long long int crc;
	if (len != 20)
	{
		return FALSE;
	}
	for(int i = 0; i< 10 ; i++)
	{
		if(flag[i] != (cFlag[i+10]^7))
			return 0;
	}
	for(int i = 0; i < 10 ; i++)
	{
		Text[i*16+i] = cFlag[i];
	}
	crc = Div((unsigned char *)Text,256);
	//TCHAR tmp[20] = {0};
	//wsprintf(tmp,"%lx",crc);
	//MessageBox(NULL,tmp,"233",MB_OK);
	if (crc == targetCrc)
	{
		return TRUE;
	}
	else
	{
		return FALSE;
	}
}

unsigned long long int Div(unsigned char *Data, int len)
{
	unsigned long long int CRC32;
	int i;
	unsigned long long int m_CRC = 0xFFFFFFFFFFFFFFFF;
	unsigned char *p;

	p = Data;
	for(i = 0; i < len; i += 2)
	{
		m_CRC = (unsigned long long int)(crc_table[(((unsigned int)m_CRC ^ p[i]) & 0xFF)*2] ^ ((unsigned int)m_CRC >> 8)) + ((unsigned long long int)(crc_table[(((unsigned int)(m_CRC >> 32) ^ p[i+1]) & 0xFF)*2 + 1] ^ (unsigned int)(m_CRC >> (8+32))) << 32);
	}
	CRC32 = ~m_CRC;

	return CRC32;
}




